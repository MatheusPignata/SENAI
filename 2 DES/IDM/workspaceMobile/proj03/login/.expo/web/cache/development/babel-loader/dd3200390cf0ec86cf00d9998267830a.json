{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport default function Equipe(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      equipe = _useState2[0],\n      setEquipe = _useState2[1];\n\n  var id = route.params.id;\n  useEffect(function () {\n    var url = \"http://10.87.207.20:8080/api/equipe/\" + id;\n    fetch(url).then(function (resp) {\n      return resp.json();\n    }).then(function (data) {\n      setEquipe(data);\n    });\n  }, []);\n  return React.createElement(View, null, React.createElement(Text, null, equipe.nomeEquipe));\n}","map":{"version":3,"sources":["C:/Users/aluno/Desktop/SENAI AULAS/2 DES/IDM/workspaceMobile/proj03/login/pages/equipe/index.js"],"names":["React","useState","useEffect","Equipe","route","equipe","setEquipe","id","params","url","fetch","then","resp","json","data","nomeEquipe"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAGA,eAAe,SAASC,MAAT,OAAwB;AAAA,MAAPC,KAAO,QAAPA,KAAO;;AACnC,kBAA4BH,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOI,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAOC,EAAP,GAAaH,KAAK,CAACI,MAAnB,CAAOD,EAAP;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIO,GAAG,GAAG,yCAAuCF,EAAjD;AAEAG,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACM,UAAAC,IAAI,EAAI;AACV,aAAOA,IAAI,CAACC,IAAL,EAAP;AACH,KAHD,EAGGF,IAHH,CAGQ,UAAAG,IAAI,EAAI;AACZR,MAAAA,SAAS,CAACQ,IAAD,CAAT;AACH,KALD;AAMH,GATQ,EASP,EATO,CAAT;AAWA,SACI,oBAAC,IAAD,QACI,oBAAC,IAAD,QAAOT,MAAM,CAACU,UAAd,CADJ,CADJ;AAKH","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {View, Text} from 'react-native'\r\n\r\nexport default function Equipe({route}){\r\n    const [equipe, setEquipe] = useState([]);\r\n\r\n    const {id} = route.params;\r\n\r\n    useEffect(() => {\r\n        let url = \"http://10.87.207.20:8080/api/equipe/\"+id;\r\n\r\n        fetch(url)\r\n        .then(resp => {\r\n            return resp.json();\r\n        }).then(data => {\r\n            setEquipe(data);\r\n        })\r\n    },[]);\r\n\r\n    return (\r\n        <View>\r\n            <Text>{equipe.nomeEquipe}</Text>\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}