{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport NativeLinearGradient from 'react-native-linear-gradient';\nimport rgb2hex from 'rgb2hex';\n\nvar LinearGradient = function (_Component) {\n  _inherits(LinearGradient, _Component);\n\n  var _super = _createSuper(LinearGradient);\n\n  function LinearGradient() {\n    _classCallCheck(this, LinearGradient);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LinearGradient, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color0 = _this$props.color0,\n          color1 = _this$props.color1,\n          children = _this$props.children,\n          points = _this$props.points;\n      var gStart = points.start;\n      var gEnd = points.end;\n      return React.createElement(NativeLinearGradient, {\n        colors: [color0, color1].map(function (c) {\n          return rgb2hex(c).hex;\n        }),\n        start: gStart,\n        end: gEnd,\n        style: [styles.linearGradient]\n      }, children);\n    }\n  }]);\n\n  return LinearGradient;\n}(Component);\n\nAnimated.LinearGradient = Animated.createAnimatedComponent(LinearGradient);\nAnimated.useNativeDriver = true;\nexport var presetColors = {\n  instagram: ['rgb(106, 57, 171)', 'rgb(151, 52, 160)', 'rgb(197, 57, 92)', 'rgb(231, 166, 73)', 'rgb(181, 70, 92)'],\n  firefox: ['rgb(236, 190, 55)', 'rgb(215, 110, 51)', 'rgb(181, 63, 49)', 'rgb(192, 71, 45)'],\n  sunrise: ['rgb(92, 160, 186)', 'rgb(106, 166, 186)', 'rgb(142, 191, 186)', 'rgb(172, 211, 186)', 'rgb(239, 235, 186)', 'rgb(212, 222, 206)', 'rgb(187, 216, 200)', 'rgb(152, 197, 190)', 'rgb(100, 173, 186)']\n};\n\nvar AnimatedGradient = function (_Component2) {\n  _inherits(AnimatedGradient, _Component2);\n\n  var _super2 = _createSuper(AnimatedGradient);\n\n  function AnimatedGradient() {\n    var _this;\n\n    _classCallCheck(this, AnimatedGradient);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n    _this.state = {\n      color0: new Animated.Value(0),\n      color1: new Animated.Value(0)\n    };\n\n    _this.componentDidMount = function () {\n      _this.startAnimation();\n    };\n\n    _this.startAnimation = function () {\n      var _this$state = _this.state,\n          color0 = _this$state.color0,\n          color1 = _this$state.color1;\n      var _this$props2 = _this.props,\n          customColors = _this$props2.customColors,\n          speed = _this$props2.speed;\n      [color0, color1].forEach(function (color) {\n        return color.setValue(0);\n      });\n      Animated.parallel([color0, color1].map(function (animatedColor) {\n        return Animated.timing(animatedColor, {\n          toValue: customColors.length,\n          duration: customColors.length * speed,\n          easing: Easing.linear\n        });\n      })).start(_this.startAnimation);\n    };\n\n    return _this;\n  }\n\n  _createClass(AnimatedGradient, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          color0 = _this$state2.color0,\n          color1 = _this$state2.color1;\n      var _this$props3 = this.props,\n          customColors = _this$props3.customColors,\n          children = _this$props3.children,\n          points = _this$props3.points,\n          style = _this$props3.style;\n      var preferColors = [];\n\n      while (preferColors.length < 2) {\n        preferColors.push(customColors.slice(preferColors.length).concat(customColors.slice(0, preferColors.length + 1)));\n      }\n\n      var interpolatedColors = [color0, color1].map(function (animatedColor, index) {\n        return animatedColor.interpolate({\n          inputRange: Array.from({\n            length: customColors.length + 1\n          }, function (v, k) {\n            return k;\n          }),\n          outputRange: preferColors[index]\n        });\n      });\n      return React.createElement(Animated.LinearGradient, {\n        style: [styles.linearGradient, style],\n        points: points,\n        color0: interpolatedColors[0],\n        color1: interpolatedColors[1]\n      }, children);\n    }\n  }]);\n\n  return AnimatedGradient;\n}(Component);\n\nAnimatedGradient.defaultProps = {\n  customColors: presetColors.instagram,\n  speed: 4000,\n  points: {\n    start: {\n      x: 0,\n      y: 0.4\n    },\n    end: {\n      x: 1,\n      y: 0.6\n    }\n  }\n};\nvar styles = StyleSheet.create({\n  linearGradient: {\n    position: 'absolute',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  }\n});\nexport default AnimatedGradient;","map":{"version":3,"sources":["C:/Users/aluno/Desktop/SENAI AULAS/2 DES/IDM/workspaceMobile/exercicio revisao/museu/node_modules/react-native-animated-linear-gradient/index.js"],"names":["PropTypes","React","Component","NativeLinearGradient","rgb2hex","LinearGradient","props","color0","color1","children","points","gStart","start","gEnd","end","map","c","hex","styles","linearGradient","Animated","createAnimatedComponent","useNativeDriver","presetColors","instagram","firefox","sunrise","AnimatedGradient","state","Value","componentDidMount","startAnimation","customColors","speed","forEach","color","setValue","parallel","animatedColor","timing","toValue","length","duration","easing","Easing","linear","style","preferColors","push","slice","concat","interpolatedColors","index","interpolate","inputRange","Array","from","v","k","outputRange","defaultProps","x","y","StyleSheet","create","position","flex","flexDirection","alignItems","left","right","top","bottom"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { StyleSheet, StatusBar, Dimensions, View, Animated, Easing } from 'react-native';\nimport NativeLinearGradient from 'react-native-linear-gradient';\nimport rgb2hex from 'rgb2hex';\n\n// const {height, width} = Dimensions.get('window');\n\nclass LinearGradient extends Component {\n  render() {\n    const { color0, color1, children, points } = this.props;\n    const gStart = points.start;\n    const gEnd = points.end;\n    return (\n      <NativeLinearGradient\n        // colors={this.props.colors.map((c) => rgb2hex(c).hex)}\n        colors={[color0, color1].map((c) => rgb2hex(c).hex)}\n        start={gStart}\n        end={gEnd}\n        style={[styles.linearGradient]}>\n        {children}\n      </NativeLinearGradient>\n    )\n  }\n}\nAnimated.LinearGradient = Animated.createAnimatedComponent(LinearGradient)\nAnimated.useNativeDriver = true\n// Animated.NativeLinearGradient = Animated.createAnimatedComponent(NativeLinearGradient)\n\nexport const presetColors = {\n  instagram: [\n    'rgb(106, 57, 171)',\n    'rgb(151, 52, 160)',\n    'rgb(197, 57, 92)',\n    'rgb(231, 166, 73)',\n    'rgb(181, 70, 92)'\n  ],\n  firefox: [\n    'rgb(236, 190, 55)',\n    'rgb(215, 110, 51)',\n    'rgb(181, 63, 49)',\n    'rgb(192, 71, 45)',\n  ],\n  sunrise: [\n    'rgb(92, 160, 186)',\n    'rgb(106, 166, 186)',\n    'rgb(142, 191, 186)',\n    'rgb(172, 211, 186)',\n    'rgb(239, 235, 186)',\n    'rgb(212, 222, 206)',\n    'rgb(187, 216, 200)',\n    'rgb(152, 197, 190)',\n    'rgb(100, 173, 186)',\n  ]\n};\n\nclass AnimatedGradient extends Component {\n\n  static defaultProps = {\n    customColors: presetColors.instagram,\n    speed: 4000,\n    points: {\n      start: { x: 0, y: 0.4 },\n      end: { x: 1, y: 0.6 }\n    }\n  }\n\n  state = {\n    color0: new Animated.Value(0),\n    color1: new Animated.Value(0),\n  }\n\n  componentDidMount = () => {\n    this.startAnimation();\n  }\n\n  startAnimation = () => {\n    const { color0, color1 } = this.state;\n    const { customColors, speed } = this.props;\n    [color0, color1].forEach(color => color.setValue(0));\n\n    Animated.parallel(\n      [color0, color1].map(animatedColor => {\n        return Animated.timing(animatedColor, {\n          toValue: customColors.length,\n          duration: customColors.length * speed,\n          easing: Easing.linear\n        })\n      })\n    )\n      .start(this.startAnimation);\n\n  };\n\n  render() {\n\n    const { color0, color1 } = this.state;\n    const { customColors, children, points, style } = this.props;\n    const preferColors = [];\n    // while (preferColors.length < customColors.length) {\n    while (preferColors.length < 2) {\n      preferColors.push(\n        customColors\n          .slice(preferColors.length)\n          .concat(customColors.slice(0, preferColors.length + 1))\n      )\n    }\n    const interpolatedColors = [color0, color1].map((animatedColor, index) => {\n      return animatedColor.interpolate({\n        inputRange: Array.from({ length: customColors.length + 1 }, (v, k) => k),\n        outputRange: preferColors[index]\n      })\n    });\n\n    return (\n      <Animated.LinearGradient\n        style={[styles.linearGradient, style]}\n        points={points}\n        color0={interpolatedColors[0]}\n        color1={interpolatedColors[1]}>\n        {children}\n      </Animated.LinearGradient>\n    )\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  linearGradient: {\n    position: 'absolute',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  }\n});\n\n\nexport default AnimatedGradient\n"]},"metadata":{},"sourceType":"module"}